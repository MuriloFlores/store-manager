name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/order-manager:latest

      - name: SSH key setup
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ${{ secrets.EC2_APP_DIR }}
          
            echo "Waiting 15 seconds for Docker image to replicate..."
            sleep 15
          
            echo "Downloading new image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/order_manager:latest
          
            echo "Performing database migrations...
         
            docker run --rm --env-file .env --network host -v $(pwd)/infrastructure/db/migrations:/migrations \
            migrate/migrate -path /migrations \
            -database "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable" up
          
            echo "Starting the application with Docker Compose..."
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
          
            echo "Cleaning up old images..."
            docker image prune -af
          EOF